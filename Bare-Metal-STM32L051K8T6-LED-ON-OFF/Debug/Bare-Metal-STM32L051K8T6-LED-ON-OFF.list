
Bare-Metal-STM32L051K8T6-LED-ON-OFF.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000b8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000198  080000b8  080000b8  000100b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000250  08000258  00010258  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000250  08000250  00010258  2**0
                  CONTENTS
  4 .ARM          00000000  08000250  08000250  00010258  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000250  08000258  00010258  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000250  08000250  00010250  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000254  08000254  00010254  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010258  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000000  08000258  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  08000258  00020020  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00010258  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000011a  00000000  00000000  00010280  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000b1  00000000  00000000  0001039a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000050  00000000  00000000  00010450  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000038  00000000  00000000  000104a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000f04  00000000  00000000  000104d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000044f  00000000  00000000  000113dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003a1b  00000000  00000000  0001182b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00015246  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000078  00000000  00000000  00015298  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000b8 <__do_global_dtors_aux>:
 80000b8:	b510      	push	{r4, lr}
 80000ba:	4c06      	ldr	r4, [pc, #24]	; (80000d4 <__do_global_dtors_aux+0x1c>)
 80000bc:	7823      	ldrb	r3, [r4, #0]
 80000be:	2b00      	cmp	r3, #0
 80000c0:	d107      	bne.n	80000d2 <__do_global_dtors_aux+0x1a>
 80000c2:	4b05      	ldr	r3, [pc, #20]	; (80000d8 <__do_global_dtors_aux+0x20>)
 80000c4:	2b00      	cmp	r3, #0
 80000c6:	d002      	beq.n	80000ce <__do_global_dtors_aux+0x16>
 80000c8:	4804      	ldr	r0, [pc, #16]	; (80000dc <__do_global_dtors_aux+0x24>)
 80000ca:	e000      	b.n	80000ce <__do_global_dtors_aux+0x16>
 80000cc:	bf00      	nop
 80000ce:	2301      	movs	r3, #1
 80000d0:	7023      	strb	r3, [r4, #0]
 80000d2:	bd10      	pop	{r4, pc}
 80000d4:	20000000 	.word	0x20000000
 80000d8:	00000000 	.word	0x00000000
 80000dc:	08000238 	.word	0x08000238

080000e0 <frame_dummy>:
 80000e0:	4b04      	ldr	r3, [pc, #16]	; (80000f4 <frame_dummy+0x14>)
 80000e2:	b510      	push	{r4, lr}
 80000e4:	2b00      	cmp	r3, #0
 80000e6:	d003      	beq.n	80000f0 <frame_dummy+0x10>
 80000e8:	4903      	ldr	r1, [pc, #12]	; (80000f8 <frame_dummy+0x18>)
 80000ea:	4804      	ldr	r0, [pc, #16]	; (80000fc <frame_dummy+0x1c>)
 80000ec:	e000      	b.n	80000f0 <frame_dummy+0x10>
 80000ee:	bf00      	nop
 80000f0:	bd10      	pop	{r4, pc}
 80000f2:	46c0      	nop			; (mov r8, r8)
 80000f4:	00000000 	.word	0x00000000
 80000f8:	20000004 	.word	0x20000004
 80000fc:	08000238 	.word	0x08000238

08000100 <Delay>:
 */

#include <stdint.h>
int i=0;
void  Delay()
{
 8000100:	b580      	push	{r7, lr}
 8000102:	af00      	add	r7, sp, #0
for(i=0;i<100000;i++);
 8000104:	4b08      	ldr	r3, [pc, #32]	; (8000128 <Delay+0x28>)
 8000106:	2200      	movs	r2, #0
 8000108:	601a      	str	r2, [r3, #0]
 800010a:	e004      	b.n	8000116 <Delay+0x16>
 800010c:	4b06      	ldr	r3, [pc, #24]	; (8000128 <Delay+0x28>)
 800010e:	681b      	ldr	r3, [r3, #0]
 8000110:	1c5a      	adds	r2, r3, #1
 8000112:	4b05      	ldr	r3, [pc, #20]	; (8000128 <Delay+0x28>)
 8000114:	601a      	str	r2, [r3, #0]
 8000116:	4b04      	ldr	r3, [pc, #16]	; (8000128 <Delay+0x28>)
 8000118:	681b      	ldr	r3, [r3, #0]
 800011a:	4a04      	ldr	r2, [pc, #16]	; (800012c <Delay+0x2c>)
 800011c:	4293      	cmp	r3, r2
 800011e:	ddf5      	ble.n	800010c <Delay+0xc>
}
 8000120:	46c0      	nop			; (mov r8, r8)
 8000122:	46c0      	nop			; (mov r8, r8)
 8000124:	46bd      	mov	sp, r7
 8000126:	bd80      	pop	{r7, pc}
 8000128:	2000001c 	.word	0x2000001c
 800012c:	0001869f 	.word	0x0001869f

08000130 <main>:

int main(void) {
 8000130:	b580      	push	{r7, lr}
 8000132:	b084      	sub	sp, #16
 8000134:	af00      	add	r7, sp, #0

	uint32_t *clkreg = (uint32_t*) 0x4002102C;
 8000136:	4b15      	ldr	r3, [pc, #84]	; (800018c <main+0x5c>)
 8000138:	60fb      	str	r3, [r7, #12]
	uint32_t *Modreg = (uint32_t *) 0x50000400;
 800013a:	4b15      	ldr	r3, [pc, #84]	; (8000190 <main+0x60>)
 800013c:	60bb      	str	r3, [r7, #8]
	uint32_t *outreg = (uint32_t *) 0x50000414;
 800013e:	4b15      	ldr	r3, [pc, #84]	; (8000194 <main+0x64>)
 8000140:	607b      	str	r3, [r7, #4]
	*clkreg |= 0x00000002;
 8000142:	68fb      	ldr	r3, [r7, #12]
 8000144:	681b      	ldr	r3, [r3, #0]
 8000146:	2202      	movs	r2, #2
 8000148:	431a      	orrs	r2, r3
 800014a:	68fb      	ldr	r3, [r7, #12]
 800014c:	601a      	str	r2, [r3, #0]

	//clear the bit
//	*Modreg &= 0x00000400;
	*Modreg &= 0xFFFFF4FF;
 800014e:	68bb      	ldr	r3, [r7, #8]
 8000150:	681b      	ldr	r3, [r3, #0]
 8000152:	4a11      	ldr	r2, [pc, #68]	; (8000198 <main+0x68>)
 8000154:	401a      	ands	r2, r3
 8000156:	68bb      	ldr	r3, [r7, #8]
 8000158:	601a      	str	r2, [r3, #0]
	*Modreg |= 0x00000400;
 800015a:	68bb      	ldr	r3, [r7, #8]
 800015c:	681b      	ldr	r3, [r3, #0]
 800015e:	2280      	movs	r2, #128	; 0x80
 8000160:	00d2      	lsls	r2, r2, #3
 8000162:	431a      	orrs	r2, r3
 8000164:	68bb      	ldr	r3, [r7, #8]
 8000166:	601a      	str	r2, [r3, #0]

	while(1)
	{
	//OUTPUT
	*outreg |= 0x00000020;
 8000168:	687b      	ldr	r3, [r7, #4]
 800016a:	681b      	ldr	r3, [r3, #0]
 800016c:	2220      	movs	r2, #32
 800016e:	431a      	orrs	r2, r3
 8000170:	687b      	ldr	r3, [r7, #4]
 8000172:	601a      	str	r2, [r3, #0]
	Delay();     //1Sec
 8000174:	f7ff ffc4 	bl	8000100 <Delay>
	*outreg &= 0xFFFFFF0F;
 8000178:	687b      	ldr	r3, [r7, #4]
 800017a:	681b      	ldr	r3, [r3, #0]
 800017c:	22f0      	movs	r2, #240	; 0xf0
 800017e:	4393      	bics	r3, r2
 8000180:	001a      	movs	r2, r3
 8000182:	687b      	ldr	r3, [r7, #4]
 8000184:	601a      	str	r2, [r3, #0]
	Delay();
 8000186:	f7ff ffbb 	bl	8000100 <Delay>
	*outreg |= 0x00000020;
 800018a:	e7ed      	b.n	8000168 <main+0x38>
 800018c:	4002102c 	.word	0x4002102c
 8000190:	50000400 	.word	0x50000400
 8000194:	50000414 	.word	0x50000414
 8000198:	fffff4ff 	.word	0xfffff4ff

0800019c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800019c:	480d      	ldr	r0, [pc, #52]	; (80001d4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800019e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001a0:	e000      	b.n	80001a4 <Reset_Handler+0x8>
 80001a2:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001a4:	480c      	ldr	r0, [pc, #48]	; (80001d8 <LoopForever+0x6>)
  ldr r1, =_edata
 80001a6:	490d      	ldr	r1, [pc, #52]	; (80001dc <LoopForever+0xa>)
  ldr r2, =_sidata
 80001a8:	4a0d      	ldr	r2, [pc, #52]	; (80001e0 <LoopForever+0xe>)
  movs r3, #0
 80001aa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001ac:	e002      	b.n	80001b4 <LoopCopyDataInit>

080001ae <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001ae:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001b0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001b2:	3304      	adds	r3, #4

080001b4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001b4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001b6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001b8:	d3f9      	bcc.n	80001ae <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001ba:	4a0a      	ldr	r2, [pc, #40]	; (80001e4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80001bc:	4c0a      	ldr	r4, [pc, #40]	; (80001e8 <LoopForever+0x16>)
  movs r3, #0
 80001be:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001c0:	e001      	b.n	80001c6 <LoopFillZerobss>

080001c2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001c2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001c4:	3204      	adds	r2, #4

080001c6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001c6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001c8:	d3fb      	bcc.n	80001c2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80001ca:	f000 f811 	bl	80001f0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80001ce:	f7ff ffaf 	bl	8000130 <main>

080001d2 <LoopForever>:

LoopForever:
    b LoopForever
 80001d2:	e7fe      	b.n	80001d2 <LoopForever>
  ldr   r0, =_estack
 80001d4:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 80001d8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80001dc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80001e0:	08000258 	.word	0x08000258
  ldr r2, =_sbss
 80001e4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80001e8:	20000020 	.word	0x20000020

080001ec <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80001ec:	e7fe      	b.n	80001ec <ADC_COMP_IRQHandler>
	...

080001f0 <__libc_init_array>:
 80001f0:	b570      	push	{r4, r5, r6, lr}
 80001f2:	2600      	movs	r6, #0
 80001f4:	4d0c      	ldr	r5, [pc, #48]	; (8000228 <__libc_init_array+0x38>)
 80001f6:	4c0d      	ldr	r4, [pc, #52]	; (800022c <__libc_init_array+0x3c>)
 80001f8:	1b64      	subs	r4, r4, r5
 80001fa:	10a4      	asrs	r4, r4, #2
 80001fc:	42a6      	cmp	r6, r4
 80001fe:	d109      	bne.n	8000214 <__libc_init_array+0x24>
 8000200:	2600      	movs	r6, #0
 8000202:	f000 f819 	bl	8000238 <_init>
 8000206:	4d0a      	ldr	r5, [pc, #40]	; (8000230 <__libc_init_array+0x40>)
 8000208:	4c0a      	ldr	r4, [pc, #40]	; (8000234 <__libc_init_array+0x44>)
 800020a:	1b64      	subs	r4, r4, r5
 800020c:	10a4      	asrs	r4, r4, #2
 800020e:	42a6      	cmp	r6, r4
 8000210:	d105      	bne.n	800021e <__libc_init_array+0x2e>
 8000212:	bd70      	pop	{r4, r5, r6, pc}
 8000214:	00b3      	lsls	r3, r6, #2
 8000216:	58eb      	ldr	r3, [r5, r3]
 8000218:	4798      	blx	r3
 800021a:	3601      	adds	r6, #1
 800021c:	e7ee      	b.n	80001fc <__libc_init_array+0xc>
 800021e:	00b3      	lsls	r3, r6, #2
 8000220:	58eb      	ldr	r3, [r5, r3]
 8000222:	4798      	blx	r3
 8000224:	3601      	adds	r6, #1
 8000226:	e7f2      	b.n	800020e <__libc_init_array+0x1e>
 8000228:	08000250 	.word	0x08000250
 800022c:	08000250 	.word	0x08000250
 8000230:	08000250 	.word	0x08000250
 8000234:	08000254 	.word	0x08000254

08000238 <_init>:
 8000238:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800023a:	46c0      	nop			; (mov r8, r8)
 800023c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800023e:	bc08      	pop	{r3}
 8000240:	469e      	mov	lr, r3
 8000242:	4770      	bx	lr

08000244 <_fini>:
 8000244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000246:	46c0      	nop			; (mov r8, r8)
 8000248:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800024a:	bc08      	pop	{r3}
 800024c:	469e      	mov	lr, r3
 800024e:	4770      	bx	lr
